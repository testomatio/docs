---
import type { Props } from '@astrojs/starlight/props';
import StarlightHead from '@astrojs/starlight/components/Head.astro';
import VtbotStarlight from 'astro-vtbot/components/starlight/Base.astro';
import type { TechArticle, WithContext } from "schema-dts";

const { title, description } = Astro.props.entry.data;

const techArticleSchema: WithContext<TechArticle> = {
    "@context": "https://schema.org",
    "@type": "Article",
    headline: title,
    description: description,
    url: Astro.url.href,
};

---

<VtbotStarlight {...Astro.props}>
    <StarlightHead {...Astro.props}><slot /></StarlightHead>
</VtbotStarlight>

<script>
    document.addEventListener("astro:before-swap", (e) => {
        document
            .querySelectorAll('link[rel="stylesheet"][href*="client.crisp.chat"]')
            .forEach((el) => {
                e.newDocument.head.appendChild(el.cloneNode(true));
            });
    });
</script>

<script
        type="application/ld+json"
        set:html={JSON.stringify(techArticleSchema)}>
</script>